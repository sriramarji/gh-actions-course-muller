name: 08- Using Variables

on:
  workflow_dispatch:

env:
  WORKFLOW_VAR: 'I am workflow env var'
  OVERWRITTEN: 'I will be overwritten'
  UNDEFINED_VAR_WITH_DEFAULT: ${{ vars.UNDEFINED_VAR || 'default value' }}

jobs:
  echo:
    runs-on: ubuntu-latest
    env:
      JOB_VAR: 'I am a job env var'
      OVERWRITTEN: 'I have been overwritten at the job level'
    steps:
      - name: Print Env Variables
        env:
          STEP_VAR: 'I am a step env var'
          step_var2: 'I am another step var'
        run: |
          echo "Step env var: ${{ env.STEP_VAR }}"
          echo "Step env var 2: ${{ env.step_var2 }}"
          echo "Job env var: ${{ env.JOB_VAR }}"
          echo "Workflow env var: ${{ env.WORKFLOW_VAR }}"
          echo "Overwritten: ${{ env.OVERWRITTEN }}"
          echo "$OVERWRITTEN"
          echo "$env.OVERWRITTEN"
      - name: Overwrite Job Variable
        env:
          OVERWRITTEN: 'I have been overwritten at the step level'
        run: | 
          echo "Step env var: ${{ env.OVERWRITTEN }}"
  echo2:
    runs-on: ubuntu-latest
    steps:
      - name: print variables
        run: |
          echo "${{ vars.REPOSITORY_VAR }}"
 
  echo-prod:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Print prod variables
        run: |
          echo "${{ vars.REPOSITORY_VAR }}"
          echo "${{ vars.TARGET_VAR }}"
  echo-undefined:
    runs-on: ubuntu-latest
    steps:
      - name: Print undefined variables
        run: |
          echo "${{ env.UNDEFINED_VAR_WITH_DEFAULT }}"
