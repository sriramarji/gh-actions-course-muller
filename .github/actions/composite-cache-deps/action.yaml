name: Cache Node and NPM Dependencies

description: action allows to cache both Node and NPM Dependencies based on the package-lock.json file

inputs:
  node-version:
    description: Nodejs version to use
    default: 20.x
    required: true
  working-dir:
    description: working directory of the application
    default: .
    required: false
  target-env:
    description: '"dev" or "prod". controls whether dev dependencies are installed'
    default: dev
    required: false

outputs:
  installed-deps:
    description: 'whether dependencies were installed or not'
    value: ${{ steps.cache.outputs.cache-hit != 'true' }} 
  # random-output:
  #   description: some value
  #   value: ${{ steps.random-output.outputs.random }}

runs:
  using: composite
  steps:
    - name: setup nodejs version ${{ inputs.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}
    - name: Cache dependencies
      id: cache
      uses: actions/cache@v3
      with:
        path: ${{ inputs.working-dir }}/node_modules   
        key: node-modules-${{ inputs.target-env }}-${{ hashFiles(format('{0}/{1}', inputs.working-dir, 'package-lock.json')) }}
    - name: Install Dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: ${{ inputs.target-env == 'dev' && 'npm ci' || 'npm ci --omit=dev' }}
      shell: bash
      working-directory: ${{ inputs.working-dir }}
    # - name: Random output
    #   shell: bash
    #   id: random-output
    #   run: echo "random=123" >> "$GITHUB_OUTPUT"